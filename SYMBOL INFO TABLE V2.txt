// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © simghaditya21

//@version=5
indicator("SYMBOL TABLE" ,overlay = true)
symbol1 = input.symbol("QQQ" , "SYMBOL 1")
timeframe1 = input.timeframe("D" , "TIMEFRAME 1")
high1 =  request.security(symbol1 , timeframe1 , high)
low1 =  request.security(symbol1 , timeframe1 , low)
open1 =  request.security(symbol1 , timeframe1 , open)
close1 =  request.security(symbol1 , timeframe1 , close)
PMH1= request.security(symbol1 , "M" , high[1])
PML1= request.security(symbol1 , "M" , low[1])
PDH1= request.security(symbol1 , "D" , high[1])
PDL1= request.security(symbol1 , "D" , low[1])
DH11= request.security(symbol1 , "D" , high) 
DH12= request.security(symbol1 , "D" , high[1])
DH2 = math.max(DH11 , DH12)
DL11 = request.security(symbol1 , "D" , low[1])
DL12 =request.security(symbol1 , "D" , low[1])
DL2 = math.min(DL11 ,DL12)

//EMA
source_emas1 = input.source(close , "SOURCE EMA")
source_smas1 = input.source(close , "SOURCE SMA")
source_emas1s = request.security(symbol1 , timeframe1 , source_emas1)
source_smas1s = request.security(symbol1 , timeframe1 , source_smas1)
len_ema1 = input(21 , "EMA LENGTH")
len_sma1 = input(21 , "SMA LENGTH")
emas1 = ta.ema(source_emas1s , len_ema1)
smas1 = ta.sma(source_smas1s, len_sma1)

//2
symbol2 = input.symbol("QQQ" , "SYMBOL 2", group = "SYMBOL 2")
timeframe2 = input.timeframe("D" , "TIMEFRAME 2", group = "SYMBOL 2")
high2 =  request.security(symbol2 , timeframe2 , high)
low2 =  request.security(symbol2 , timeframe2 , low)
open2 =  request.security(symbol2 , timeframe2 , open)
close2 =  request.security(symbol2 , timeframe2 , close)
PMH2= request.security(symbol2 , "M" , high[1])
PML2= request.security(symbol2 , "M" , low[1])
PDH2= request.security(symbol2 , "D" , high[1])
PDL2= request.security(symbol2 , "D" , low[1])
DH21= request.security(symbol2 , "D" , high) 
DH22= request.security(symbol2 , "D" , high[1])
DH2s = math.max(DH21 , DH22)
DL21 = request.security(symbol2 , "D" , low[1])
DL22 =request.security(symbol2 , "D" , low[1])
DL2s = math.min(DL21 ,DL22)

//EMA
source_emas2 = input.source(close , "SOURCE EMA", group = "SYMBOL 2")
source_smas2 = input.source(close , "SOURCE SMA", group = "SYMBOL 2")
source_emas2s = request.security(symbol2 , timeframe2 , source_emas2)
source_smas2s = request.security(symbol2 , timeframe2 , source_emas2)
len_ema2 = input(21 , "EMA LENGTH" , group = "SYMBOL 2")
len_sma2 = input(21 , "SMA LENGTH", group = "SYMBOL 2")
emas2 = ta.ema(source_emas2s , len_ema2)
smas2 = ta.sma(source_smas2s, len_sma2)

//3
symbol3 = syminfo.tickerid
chartsym = input.bool(true , "CHART")
timeframe3 = input.timeframe("D" , "TIMEFRAME 3", group = "SYMBOL 3")
high3 =  request.security(symbol3 , timeframe3 , high)
low3 =  request.security(symbol3 , timeframe3 , low)
open3 =  request.security(symbol3 , timeframe3 , open)
close3 =  request.security(symbol3 , timeframe3 , close)
PMH3= request.security(symbol3 , "M" , high[1])
PML3= request.security(symbol3 , "M" , low[1])
PDH3= request.security(symbol3 , "D" , high[1])
PDL3= request.security(symbol3 , "D" , low[1])
DH31= request.security(symbol3 , "D" , high) 
DH32= request.security(symbol3 , "D" , high[1])
DH3s = math.max(DH31 , DH32)
DL31 = request.security(symbol3 , "D" , low[1])
DL32 =request.security(symbol3, "D" , low[1])
DL3s = math.min(DL31 ,DL32)

//EMA
source_emas3 = input.source(close , "SOURCE EMA", group = "SYMBOL 3")
source_smas3 = input.source(close , "SOURCE SMA", group = "SYMBOL 3")
source_emas3s = request.security(symbol3 , timeframe3 , source_emas3)
source_smas3s = request.security(symbol3 , timeframe3 , source_emas3)
len_ema3 = input(21 , "EMA LENGTH" , group = "SYMBOL 3")
len_sma3 = input(21 , "SMA LENGTH", group = "SYMBOL 3")
emas3 = ta.ema(source_emas3s , len_ema3)
smas3 = ta.sma(source_smas3s, len_sma3)

var SYMBOL1T = table.new(position = position.top_right, columns = 4, rows = 14, bgcolor = color.rgb(224, 224, 224), border_width = 1 , border_color = color.white)
if barstate.islast
    table.cell(table_id = SYMBOL1T, column = 0, row = 0, text = "SYMBOL")
    table.cell(table_id = SYMBOL1T, column = 0, row = 1, text = "HIGH")
    table.cell(table_id = SYMBOL1T, column = 0, row = 2, text = "LOW")
    table.cell(table_id = SYMBOL1T, column = 0, row = 3, text = "OPEN")
    table.cell(table_id = SYMBOL1T, column = 0, row = 4, text = "CLOSE")
    table.cell(table_id = SYMBOL1T, column = 0, row = 5, text = "PMH")
    table.cell(table_id = SYMBOL1T, column = 0, row = 6, text = "PML")
    table.cell(table_id = SYMBOL1T, column = 0, row = 7, text = "PDH")
    table.cell(table_id = SYMBOL1T, column = 0, row = 8, text = "PDL")
    table.cell(table_id = SYMBOL1T, column = 0, row = 9, text = "2DH")
    table.cell(table_id = SYMBOL1T, column = 0, row = 10, text ="2DL")
    table.cell(table_id = SYMBOL1T, column = 0, row = 11, text ="EMA")
    table.cell(table_id = SYMBOL1T, column = 0, row = 12, text ="SMA")
    //1
    table.cell(table_id = SYMBOL1T, column = 1, row = 0, text = str.tostring(symbol1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 1, text = str.tostring(high1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 2, text = str.tostring(low1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 3, text = str.tostring(open1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 4, text = str.tostring(close1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 5, text = str.tostring(PMH1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 6, text = str.tostring(PML1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 7, text = str.tostring(PDH1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 8, text = str.tostring(PDL1))
    table.cell(table_id = SYMBOL1T, column = 1, row = 9, text = str.tostring(DH2))
    table.cell(table_id = SYMBOL1T, column = 1, row = 10,text = str.tostring(DL2))
    table.cell(table_id = SYMBOL1T, column = 1, row = 11,text = str.tostring(emas1, "#######.##"))
    table.cell(table_id = SYMBOL1T, column = 1, row = 12,text = str.tostring(smas1,"#######.##"))
    //2
    table.cell(table_id = SYMBOL1T, column = 2, row = 0, text = str.tostring(symbol2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 1, text = str.tostring(high2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 2, text = str.tostring(low2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 3, text = str.tostring(open2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 4, text = str.tostring(close2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 5, text = str.tostring(PMH2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 6, text = str.tostring(PML2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 7, text = str.tostring(PDH2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 8, text = str.tostring(PDL2))
    table.cell(table_id = SYMBOL1T, column = 2, row = 9, text = str.tostring(DH2s))
    table.cell(table_id = SYMBOL1T, column = 2, row = 10,text = str.tostring(DL2s))
    table.cell(table_id = SYMBOL1T, column = 2, row = 11,text = str.tostring(emas2, "#######.##"))
    table.cell(table_id = SYMBOL1T, column = 2, row = 12,text = str.tostring(smas2,"#######.##"))

    if chartsym
    //3
        table.cell(table_id = SYMBOL1T, column = 3, row = 0, text = str.tostring(symbol3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 1, text = str.tostring(high3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 2, text = str.tostring(low3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 3, text = str.tostring(open3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 4, text = str.tostring(close3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 5, text = str.tostring(PMH3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 6, text = str.tostring(PML3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 7, text = str.tostring(PDH3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 8, text = str.tostring(PDL3))
        table.cell(table_id = SYMBOL1T, column = 3, row = 9, text = str.tostring(DH3s))
        table.cell(table_id = SYMBOL1T, column = 3, row = 10,text = str.tostring(DL3s))
        table.cell(table_id = SYMBOL1T, column = 3, row = 11,text = str.tostring(emas3, "#######.##"))
        table.cell(table_id = SYMBOL1T, column = 3, row = 12,text = str.tostring(smas3,"#######.##"))
